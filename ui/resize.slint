export component ResizableWindow inherits Window {
    no-frame: true;
    min-width: 200px;
    min-height: 150px;
    callback resize(string);

    // Top resize handle
    TouchArea {
        moved => {
            if (self.pressed) {
                root.resize("north");
            }
        }


        // moved => {
        //     if (self.pressed) {
        //         let delta-y = self.mouse-y - self.pressed-y;
        //         root.height = max(root.min-height, root.height - delta-y);
        //         root.y += delta-y;
        //         root.resize();
        //     }
        // }




        mouse-cursor: ns-resize;
        width: parent.width;
        height: 50px;
        y: 0;
    }

    // Bottom resize handle
    TouchArea {
        moved => {
            if (self.pressed) {
                // root.height = max(root.min-height, root.height + self.mouse-y - self.pressed-y);
                root.resize("south");
            }
        }
        mouse-cursor: ns-resize;
        width: parent.width;
        height: 50px;
        y: parent.height - self.height;
    }

    // Left resize handle
    TouchArea {
        moved => {
            if (self.pressed) {
                // let delta-x = self.mouse-x - self.pressed-x;
                // root.width = max(root.min-width, root.width - delta-x);
                // root.x += delta-x;
                root.resize("west");
            }
        }
        mouse-cursor: ew-resize;
        width: 50px;
        height: parent.height;
        x: 0;
    }

    // Right resize handle
    TouchArea {
        moved => {
            if (self.pressed) {
                // root.width = max(root.min-width, root.width + self.mouse-x - self.pressed-x);
                root.resize("east");
            }
        }
        mouse-cursor: ew-resize;
        width: 50px;
        height: parent.height;
        x: parent.width - self.width;
    }

    // Top-left resize handle
    TouchArea {
        moved => {
            if (self.pressed) {
                // let delta-x = self.mouse-x - self.pressed-x;
                // let delta-y = self.mouse-y - self.pressed-y;
                // root.width = max(root.min-width, root.width - delta-x);
                // root.height = max(root.min-height, root.height - delta-y);
                // root.x += delta-x;
                // root.y += delta-y;
                root.resize("northwest");
            }
        }
        mouse-cursor: nwse-resize;
        width: 50px;
        height: 50px;
        x: 0;
        y: 0;
    }

    // Top-right resize handle
    TouchArea {
        moved => {
            if (self.pressed) {
                // root.width = max(root.min-width, root.width + self.mouse-x - self.pressed-x);
                // root.height = max(root.min-height, root.height - (self.mouse-y - self.pressed-y));
                // root.y += self.mouse-y - self.pressed-y;
                root.resize("northeast");
            }
        }
        mouse-cursor: nesw-resize;
        width: 50px;
        height: 50px;
        x: parent.width - self.width;
        y: 0;
    }

    // Bottom-left resize handle
    TouchArea {
        moved => {
            if (self.pressed) {
                // root.width = max(root.min-width, root.width - (self.mouse-x - self.pressed-x));
                // root.height = max(root.min-height, root.height + self.mouse-y - self.pressed-y);
                // root.x += self.mouse-x - self.pressed-x;
                root.resize("southwest");
            }
        }
        mouse-cursor: nesw-resize;
        width: 50px;
        height: 50px;
        x: 0;
        y: parent.height - self.height;
    }

    // Bottom-right resize handle
    TouchArea {
        moved => {
            if (self.pressed) {
                // root.width = max(root.min-width, root.width + self.mouse-x - self.pressed-x);
                // root.height = max(root.min-height, root.height + self.mouse-y - self.pressed-y);
                root.resize("southeast");
            }
        }
        mouse-cursor: nwse-resize;
        width: 50px;
        height: 50px;
        x: parent.width - self.width;
        y: parent.height - self.height;
    }

    Rectangle {
        background: #632c2c;
        border-width: 1px;
        border-color: #c22828;
        // Add your content here
        Text {
            text: "Resizable Window";
            font-size: 18px;
            horizontal-alignment: center;
            vertical-alignment: center;
        }
    }
}